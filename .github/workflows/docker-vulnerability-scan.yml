name: Docker Vulnerability Scan

on:
  push:
    branches:
      - main
    paths:
      - '**/*.dockerfile'
      - '**/Dockerfile'
      - '**/*.yml'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image:
        description: "Docker image to scan (e.g. python:3.9-slim, nginx:latest, alpine:3.18)"
        required: true
        default: "nginx:latest"

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      # -------------------------
      # Set image to scan
      # -------------------------
      - name: Set image to scan
        run: |
          if [ -n "${{ github.event.inputs.image }}" ]; then
            echo "IMAGE_TO_SCAN=${{ github.event.inputs.image }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TO_SCAN=nginx:latest" >> $GITHUB_ENV
          fi

      # -------------------------
      # Set up Docker
      # -------------------------
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # -------------------------
      # Pull Docker image
      # -------------------------
      - name: Pull Docker image
        run: docker pull $IMAGE_TO_SCAN

      # ==========================
      # Trivy
      # ==========================
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Scan with Trivy
        run: trivy image $IMAGE_TO_SCAN --severity HIGH,CRITICAL --format table > trivy-report.txt

      # ==========================
      # Grype
      # ==========================
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh
          sudo mv ./bin/grype /usr/local/bin/
          grype version
      - name: Scan with Grype
        run: grype $IMAGE_TO_SCAN --only-fixed --output table > grype-report.txt

      # ==========================
      # Anchore SBOM (Syft + Grype)
      # ==========================
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
          sudo mv ./bin/syft /usr/local/bin/
          syft version
      - name: Generate SBOM with Syft
        run: syft $IMAGE_TO_SCAN -o json > sbom.json
      - name: Scan SBOM with Grype
        run: grype sbom:sbom.json --output table > anchore-report.txt

      # ==========================
      # Clair (with Klar client)
      # ==========================
      - name: Run Clair
        run: |
          docker run -d --name clair -p 6060:6060 ghcr.io/projectclair/clair:latest
          sleep 15
      - name: Install Klar
        run: |
          curl -L https://github.com/optiopay/klar/releases/download/v2.4/klar-2.4-linux-amd64 -o klar
          chmod +x klar && sudo mv klar /usr/local/bin/
      - name: Scan with Clair
        run: klar $IMAGE_TO_SCAN > clair-report.txt

      # ==========================
      # Snyk
      # ==========================
      - name: Set up Snyk
        uses: snyk/actions/setup@master
      - name: Scan with Snyk
        run: snyk container test $IMAGE_TO_SCAN --severity-threshold=high --json > snyk-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # ==========================
      # Upload reports
      # ==========================
      - name: Upload scan reports
        uses: actions/upload-artifact@v4
        with:
          name: vulnerability-reports
          path: |
            trivy-report.txt
            grype-report.txt
            anchore-report.txt
            clair-report.txt
            snyk-report.json
            sbom.json
